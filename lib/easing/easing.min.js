// A função a seguir define um conjunto de funções de easing para uso com animações jQuery.
!function(n) {
    // Verifica se o ambiente suporta AMD (Asynchronous Module Definition).
    // Se sim, utiliza define() para definir o módulo e suas dependências.
    // Caso contrário, verifica se é um ambiente de módulo comum (CommonJS).
    // Se sim, exporta as funções de easing como um módulo.
    // Caso contrário, assume que jQuery já está disponível globalmente.
    "function" == typeof define && define.amd ? 
        define(["jquery"], function(e) {
            return n(e)
        }) : 
        "object" == typeof module && "object" == typeof module.exports ? 
            exports = n(require("jquery")) : 
            n(jQuery);
}(function(n) {
    // Define a função de easing chamada 'e' para cálculos intermediários.
    function e(n) {
        var e = 7.5625, t = 2.75;
        return n < 1 / t ? 
            e * n * n : 
            n < 2 / t ? 
                e * (n -= 1.5 / t) * n + .75 : 
                n < 2.5 / t ? 
                    e * (n -= 2.25 / t) * n + .9375 : 
                    e * (n -= 2.625 / t) * n + .984375
    }

    // Se o módulo 'easing' já estiver definido em jQuery, adiciona a função de swing.
    void 0 !== n.easing && (n.easing.jswing = n.easing.swing);

    // Define constantes matemáticas úteis.
    var t = Math.pow, u = Math.sqrt, r = Math.sin, i = Math.cos, a = Math.PI, c = 1.70158, o = 1.525 * c,
        s = 2 * a / 3, f = 2 * a / 4.5;

    // Estende o objeto 'jQuery.easing' com várias funções de easing.
    n.extend(n.easing, {
        def: "easeOutQuad",
        swing: function(e) {
            return n.easing[n.easing.def](e)
        },
        // Define várias funções de easing com diferentes comportamentos.
        easeInQuad: function(n) { return n * n },
        easeOutQuad: function(n) { return 1 - (1 - n) * (1 - n) },
        easeInOutQuad: function(n) { return n < .5 ? 2 * n * n : 1 - t(-2 * n + 2, 2) / 2 },
        // Mais funções de easing...
        easeInBounce: function(n) { return 1 - e(1 - n) },
        easeOutBounce: e,
        easeInOutBounce: function(n) { return n < .5 ? (1 - e(1 - 2 * n)) / 2 : (1 + e(2 * n - 1)) / 2 }
    });
});
